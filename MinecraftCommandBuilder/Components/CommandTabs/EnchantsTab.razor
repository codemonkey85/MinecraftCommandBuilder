<h3>
    @TabTitle
</h3>

<MudStack>
    <PlayerNameComponent/>

    <MudAutocomplete T="@Enchantment"
                     Label="Select an enchantment"
                     @bind-Value="@SelectedEnchantment"
                     SearchFunc="@Search"
                     ToStringFunc="@ToString"
                     Clearable/>

    <MudNumericField T="@int"
                     Label="Level"
                     Min="1"
                     Max="@(SelectedEnchantment?.MaxLevel ?? 1)"
                     @bind-Value="@Level"/>

    <MudButton ButtonType="@ButtonType.Submit"
               Variant="@Variant.Filled"
               Color="@Color.Primary"
               OnClick="@GenerateCommand"
               Disabled="@GenerateCommandDisabled"
               title="Generate command">
        Generate command
    </MudButton>

    <MudStack>
        <h4>
            My Favorite Enchantments
        </h4>

        <MudNumericField T="@int"
                         Label="Level"
                         Min="1"
                         Max="255"
                         @bind-Value="@BestEnchantsLevel"/>

        @RenderBestEnchants("Pickaxe", BestPickaxeEnchantments)
        @RenderBestEnchants("Sword", BestSwordEnchantments)
        @RenderBestEnchants("Axe", BestAxeEnchantments)
        @RenderBestEnchants("Shovel", BestShovelEnchantments)
        @RenderBestEnchants("Hoe", BestHoeEnchantments)

        @RenderBestEnchants("Bow", BestBowEnchantments)
        @RenderBestEnchants("Crossbow", BestCrossbowEnchantments)
        @RenderBestEnchants("Trident", BestTridentEnchantments)

        @RenderBestEnchants("Helmet", BestHelmetEnchantments)
        @RenderBestEnchants("Chestplate", BestBodyArmorEnchantments)
        @RenderBestEnchants("Leggings", BestLeggingsEnchantments)
        @RenderBestEnchants("Boots", BestBootsEnchantments)

        @RenderBestEnchants("Elytra", BestElytraEnchantments)
        @RenderBestEnchants("Shield", BestShieldEnchantments)

        @RenderBestEnchants("Shears", BestShearsEnchantments)
        @RenderBestEnchants("Flint and Steel", BestFlintAndSteelEnchantments)
        @RenderBestEnchants("Brush", BestBrushEnchantments)

        @RenderBestEnchants("Turtle Shell", BestTurtleShellEnchantments)
    </MudStack>
</MudStack>

@code {

    private RenderFragment? RenderBestEnchants(string itemName, List<Enchantment> enchantments)
    {
        if (enchantments is not { Count: > 0 })
        {
            Console.WriteLine($"No best enchantments for {itemName}.");
            return null;
        }

        var item = GetItem(itemName);

        if (item is null)
        {
            Console.WriteLine($"Item {itemName} not found.");
            itemName = $"Netherite {itemName}";
            item = GetItem(itemName);

            if (item is null)
            {
                Console.WriteLine($"Item {itemName} not found either.");
                return null;
            }
        }

        var command = GenerateGiveEnchantedItemCommand(item.Name, enchantments, BestEnchantsLevel);

        return
            @<MudStack Class="my-3">
                <h5>
                    @itemName
                </h5>
                <MudInput T="@string"
                          Label="Command Text"
                          Value="@command"
                          Variant="@Variant.Outlined"
                          ReadOnly
                          Adornment="@Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.ContentCopy"
                          OnAdornmentClick="@(async _ => await CopyCommand(command))"/>
            </MudStack>;
    }

}
